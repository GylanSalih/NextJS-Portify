/* General container */
.featurecontainer {
    margin: 0 auto;
    padding: 0 20px;
    max-width: 1250px;
}

/* Features section */
.features-section {
    background-color: var(--dark-mode);
    padding-bottom: 52px;
}

.dark-mode .features-section {
    background-color: var(--light-mode);
    padding-bottom: 52px;
}

/* Intro section */
.intro {
    padding: 32px;
}

/* Intro text */
.intro-text {
    font-size: 1.25rem;
    color: #DFDFF0;
}

/* Intro description */
.intro-description {
    font-size: 1.25rem;
    color: rgba(223, 223, 242, 0.5);
    max-width: 400px;
}

/*------------------------------------------------------*/
/* Zusätzliche Anpassungen an der grid-container-Eigenschaft */
.grid-featurecontainer {
    display: grid;
    grid-template-columns: 1fr 1fr; /* Die Spalten bleiben gleich */
    grid-template-rows: auto auto; /* Die Zeilenhöhe passt sich an den Inhalt an */
    gap: 20px;
    /* Falls nötig: Platz für die Karten optimieren */
    align-items: start; /* Die Karten bleiben an der oberen Kante des Containers */
}

/* Große Karte (links) */
.card-large {
    grid-column: span 2; /* Die große Karte nimmt beide Spalten ein */
    grid-row: span 2; /* Die große Karte nimmt beide Zeilen ein */
    max-width: 100%;
    height: 75vh;
    border-radius: 0.375rem;
}

/* Lange Karte (links) */
.card-long {
    grid-column: span 1;
    grid-row: span 2;
    max-height: 750px;
    max-width: 620px;
}

/* Kleine Karte (unter der langen Karte) */
.card-small {
    grid-column: span 1; /* Einspaltig */
    grid-row: span 1; /* Einzeilig */
    max-height: 400px; /* Neue Höhe */
    height: auto; /* Stellt sicher, dass die Karten flexibel sind */
}

/* Medium Karte (unter der kleinen Karte) */
.card-medium {
    grid-column: span 1; /* Einspaltig */
    grid-row: span 1; /* Einzeilig */
    max-height: 400px; /* Neue Höhe */
    height: auto; /* Stellt sicher, dass die Karten flexibel sind */
}

.card-small, .card-medium {
    height: auto;
    max-height: 359px;
    max-width: 611px;
    position: relative; /* Ensure relative positioning for content centering */
}
/* Optional: If you need a fixed aspect ratio for other cards */
.card-large, .card-long {
    position: relative;
    height: auto; /* Flexible height */
}

/*------------------------------------------------------*/

/*------------------------------------------------------*/
/* Special grid container */
.grid-special-container {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
    height: auto;
    padding-top: 25px;
}

/* Extra kleine Karte 1 */
.card-xsmall {
    grid-column: span 1;
    grid-row: span 1;
}

/* Extra kleine Karte 2 */
.card-xsmall2 {
    grid-column: span 1;
    grid-row: span 1;
}
/*------------------------------------------------------*/

.card-wrapper {
    position: relative;
    border-color: rgb(255 255 255 / 0.2);
    border-style: solid;
    border-radius: 0.375rem;
    border-width: 1px;
    overflow: hidden;
    transition: transform 0.5s ease, box-shadow 0.3s ease; /* Updated transition for smooth scaling */
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
}



/* Card video */
.card-video {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 0.375rem; /* Ensures rounded corners if needed */
}

.card-wrapper:hover {
    transform: scale(0.95); /* Verkleinert die Karte */
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
}

.coming-soon-btn {
    position: absolute;
    bottom: 10px; /* Place the button 10px from the bottom */
    right: 10px; /* Place the button 10px from the right */
    display: inline-flex;
    gap: 5px;
    padding: 10px 20px;
    background-color: black;
    color: rgba(255, 255, 255, 0.2);
    border-radius: 9999px;
    cursor: pointer;
    z-index: 2;
}


.coming-soon-text {
    font-size: 1rem;
    color: rgba(255, 255, 255, 0.7);
}

.arrow-icon {
    font-size: 1.5rem;
    color: rgba(255, 255, 255, 0.7);
}

/* Radial gradient effect for the button */
.radial-gradient {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 9999px;
    pointer-events: none;
}












/* für content in den video karten*/
.card-content {
	position: absolute;
	top: 0;
	left: 0;
	padding: 20px;
	color: #fff;
	text-align: left;
	z-index: 1;
	max-width: 100%;
	height: 100%;
}


.card-title {
	font-size: 1.5rem;
	font-weight: bold;
	color: #fff;
	margin-bottom: 10px;
	font-size: 26px;
    text-transform: uppercase; /* Capitalize all text */
    font-family: "RedHat", sans-serif; /* Gleiche Schriftart für beide Modi */
}

/* Standardstil */
.card-description {
    color: rgba(255, 255, 255, 0.733);
    margin-bottom: 15px;
    font-family: "RedHat", sans-serif;
    font-size: 1rem;
    line-height: 1.5rem;
    padding-right: 0; /* Standardmäßig kein Padding */
}

/* Einstellungen für Bildschirme mit mindestens 950px Breite */
@media (min-width: 950px) {
    .card-description {
        padding-right: 272px; /* Nur bei 950px oder breiter */
    }
}


import { useState, useRef } from "react";
import { TiLocationArrow } from "react-icons/ti";
import './Features.css';

const Card = ({ src, title, description, isComingSoon, className }) => {
  const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0 });
  const [hoverOpacity, setHoverOpacity] = useState(0);
  const hoverButtonRef = useRef(null);

  const handleMouseMove = (event) => {
    if (!hoverButtonRef.current) return;
    const rect = hoverButtonRef.current.getBoundingClientRect();
    setCursorPosition({
      x: event.clientX - rect.left,
      y: event.clientY - rect.top,
    });
  };

  const handleMouseEnter = () => setHoverOpacity(1);
  const handleMouseLeave = () => setHoverOpacity(0);

  return (
    <div className={`card-wrapper ${className}`}>
      <video
        src={src}
        loop
        muted
        className="card-video"
      />
      <div className="card-content">
        <h1 className="card-title">{title}</h1>
        {description && <p className="card-description">{description}</p>}

        {isComingSoon && (
          <div
            ref={hoverButtonRef}
            onMouseMove={handleMouseMove}
            onMouseEnter={handleMouseEnter}
            onMouseLeave={handleMouseLeave}
            className="coming-soon-btn"
          >
            <div
              className="radial-gradient"
              style={{
                opacity: hoverOpacity,
                background: `radial-gradient(100px circle at ${cursorPosition.x}px ${cursorPosition.y}px, #656fe288, #00000026)`,
              }}
            />
            <TiLocationArrow className="arrow-icon" />
            <p className="coming-soon-text">coming soon</p>
          </div>
        )}
      </div>
    </div>
  );
};

const Features = () => (
  <section className="features-section">
    <div className="featurecontainer">

      <div className="grid-featurecontainer">
        <Card
          src="assets/videos/feature-1.mp4"
          title="Project 1"
          description="A cross-platform metagame app, turning your activities across Web2 and Web3 games into a rewarding adventure."
          isComingSoon
          className="card-large"
        />
        <Card
          src="assets/videos/feature-2.mp4"
          title="Project 1"
          description="An anime and gaming-inspired NFT collection - the IP primed for expansion."
          isComingSoon
          className="card-long"
        />
        <Card
          src="assets/videos/feature-4.mp4"
          title="Project 3"
          description="A gamified social hub, adding a new dimension of play to social interaction for Web3 communities."
          isComingSoon
          className="card-medium"
        />
        <Card
          src="assets/videos/feature-3.mp4"
          title="Project 2"
          description="A gamified social hub, adding a new dimension of play to social interaction for Web3 communities."
          isComingSoon
          className="card-small"
        />
      </div>

      <div className="grid-special-container">
        <Card
          src="assets/videos/feature-5.mp4"
          title="Project 4"
          description="A gamified social hub, adding a new dimension of play to social interaction for Web3 communities."
          isComingSoon
          className="card-xsmall"
        />
        <Card
          src="assets/videos/feature-5.mp4"
          title="Project 5"
          description="A gamified social hub, adding a new dimension of play to social interaction for Web3 communities."
          isComingSoon
          className="card-xsmall2"
        />
      </div>
    </div>
  </section>
);

export default Features;
